name: localdata
type: server
meta:
  category: Database
  tags:
    - database
    - postgresql
    - mysql
    - sqlite
    - mongodb
    - redis
    - elasticsearch
    - spreadsheet
    - excel
    - csv
    - json
    - yaml
    - xml
    - data-analysis
    - file-processing
about:
  title: LocalData MCP Server
  description: A comprehensive MCP server for databases, spreadsheets, and structured data files with security features, performance optimization, and extensive format support. Supports SQL databases (PostgreSQL, MySQL, SQLite, DuckDB), modern databases (MongoDB, Redis, Elasticsearch, InfluxDB, Neo4j, CouchDB), spreadsheets (Excel, LibreOffice Calc, Apple Numbers), and structured files (CSV, TSV, JSON, YAML, TOML, XML, INI, Parquet, Feather, Arrow, HDF5).
  icon: https://raw.githubusercontent.com/ChrisGVE/localdata-mcp/main/assets/logo.png
source:
  project: https://github.com/ChrisGVE/localdata-mcp
config:
  description: |
    LocalData MCP Server provides comprehensive data connectivity with optional configuration.
  env:
    # Core Application (Required)
    - name: PYTHONUNBUFFERED
      description: Enable real-time logging output
      default: "1"
      required: true
    
    # Python Runtime (Optional) 
    - name: PYTHONDONTWRITEBYTECODE
      description: Prevent .pyc file generation
      default: "1"
    - name: PIP_NO_CACHE_DIR
      description: Disable pip caching
      default: "1"
    - name: PIP_DISABLE_PIP_VERSION_CHECK
      description: Skip pip version checks
      default: "1"
    
    # Database Connections (Optional)
    - name: POSTGRES_URL
      description: PostgreSQL connection string
      example: "postgresql://user:pass@host:5432/db"
    - name: MYSQL_URL
      description: MySQL connection string
      example: "mysql+pymysql://user:pass@host:3306/db"
    - name: MONGODB_URL
      description: MongoDB connection string
      example: "mongodb://user:pass@host:27017/db"
    - name: REDIS_URL
      description: Redis connection string
      example: "redis://:pass@host:6379/0"
    - name: ELASTICSEARCH_URL
      description: Elasticsearch URL
      example: "http://host:9200"
    - name: INFLUXDB_URL
      description: InfluxDB connection URL
      example: "http://host:8086"
    - name: NEO4J_URI
      description: Neo4j connection URI
      example: "bolt://host:7687"
    - name: COUCHDB_URL
      description: CouchDB connection URL
      example: "http://user:pass@host:5984"
    
    # Performance & Resource Management
    - name: LOCALDATA_MAX_MEMORY
      description: Maximum memory usage
      default: "1G"
    - name: LOCALDATA_CHUNK_SIZE
      description: Rows per chunk for large datasets
      default: "10000"
    - name: LOCALDATA_BUFFER_TIMEOUT
      description: Buffer expiry in seconds
      default: "600"
    - name: LOCALDATA_MAX_CONNECTIONS
      description: Maximum database connections
      default: "10"
    - name: LOCALDATA_MAX_FILE_SIZE
      description: Maximum file size in bytes
      default: "104857600"
    
    # Security
    - name: LOCALDATA_ALLOWED_PATHS
      description: Comma-separated allowed file paths
      default: "/app/data"
    
    # Logging
    - name: LOG_LEVEL
      description: Logging level (DEBUG, INFO, WARNING, ERROR)
      default: "INFO"
    - name: LOG_FORMAT
      description: Log format (json, text)
      default: "json"
  
  volumes:
    - name: data
      description: Data directory (required)
      path: "/app/data"
      required: true
    - name: logs
      description: Log directory (recommended)
      path: "/app/logs"
    - name: temp
      description: Temporary files directory (recommended for large files)
      path: "/app/temp"
    - name: config
      description: Configuration files (optional, read-only)
      path: "/app/config"
      readonly: true
  
  features: |
    ## Key Features:
    - **Multi-Database Support**: PostgreSQL, MySQL, SQLite, DuckDB, MongoDB, Redis, Elasticsearch, InfluxDB, Neo4j, CouchDB
    - **Spreadsheet Formats**: Excel (.xlsx/.xls), LibreOffice Calc (.ods), Apple Numbers with full multi-sheet support
    - **Structured Files**: CSV, TSV, JSON, YAML, TOML, XML, INI with automatic conversion to queryable format
    - **Analytical Formats**: Parquet, Feather, Arrow, HDF5 for data science workflows
    - **Security Features**: Path restrictions, SQL injection prevention, connection limits, non-root execution
    - **Performance**: Large file buffering (100MB+), query result buffering (100+ rows), chunk retrieval, memory optimization
    
    ## Usage:
    1. Mount data directory: `-v /host/data:/app/data`
    2. Connect to data sources using `connect_database` tool
    3. Query data using `execute_query` or `execute_query_json` tools
    4. Explore schemas with `describe_database` and `describe_table` tools
    5. Handle large results with automatic buffering system
    
    ## Security:
    - All file paths restricted to mounted data directory
    - Runs as non-root user (uid:1000)
    - SQL injection prevention with parameterized queries
    - Connection limits and resource management
    
    Database connections are established dynamically - no credentials required in environment variables.